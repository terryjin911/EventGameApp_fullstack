{"ast":null,"code":"var _jsxFileName = \"C:\\\\TerryJin\\\\NaverCloud\\\\TerryJin\\\\EventGameApp\\\\src\\\\components\\\\End.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst End = () => {\n  //사용자 이름관리 스테이트 정의 및 초기값 세팅\n  const [username, setUserName] = useState(\"\");\n  const [useremail, setUserEmail] = useState(\"\"); //form data\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const {\n    name,\n    email\n  } = user; //유저정보 데이터 바인딩 처리함수       //이거 넣으니까 데이터입력해주세요 false alert안 뜬다!\n\n  const onUserChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  }; // const onClickFunction = (e) => {\n  //   window.confirm(\n  //     `응모자 성함과 이메일 정보를 확인해주세요 ${username}, ${useremail}` //왜 둘중 하나만 뜨냐\n  //   );\n  //   setUserName(\"\");\n  //   setUserEmail(\"\");\n  // };\n  //데이터 백엔드 저장처리함수\n\n\n  const onEntryDataSave = () => {\n    // 유효성검사 만약 form이 비어있으면\n    if (user.name == \"\") {\n      alert(\"이름을 입력해주세요.\");\n      return false;\n    }\n\n    if (user.email == \"\") {\n      alert(\"이메일을 입력해주세요.\");\n      return false;\n    }\n\n    axios;\n  }; //Ingame에서 받아온 totalScore\n  // const totalScore {\n  //   return <div>\n  //     <h1>나의 총 Score: {props.totalScore}</h1>;\n  //     </div>\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Score : \")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Name : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\" // value=\"user.name\"\n    ,\n    onChange: e => onUserChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Email : \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\" // value=\"user.email\"\n    ,\n    onChange: e => onUserChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onEntryDataSave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"\\uC751\\uBAA8\")));\n};\n\nexport default End;","map":{"version":3,"sources":["C:/TerryJin/NaverCloud/TerryJin/EventGameApp/src/components/End.js"],"names":["React","useState","axios","End","username","setUserName","useremail","setUserEmail","user","setUser","name","email","onUserChange","e","target","value","onEntryDataSave","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C,CAHgB,CAKhB;;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC/BS,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;AAKA,QAAM;AAAED,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,IAAxB,CAXgB,CAahB;;AACA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACK,CAAC,CAACC,MAAF,CAASJ,IAAV,GAAiBG,CAAC,CAACC,MAAF,CAASC;AAArC,KAAD,CAAP;AACD,GAFD,CAdgB,CAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACA,QAAIR,IAAI,CAACE,IAAL,IAAa,EAAjB,EAAqB;AACnBO,MAAAA,KAAK,CAAC,aAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,QAAIT,IAAI,CAACG,KAAL,IAAc,EAAlB,EAAsB;AACpBM,MAAAA,KAAK,CAAC,cAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAEDf,IAAAA,KAAK;AACN,GAbD,CA3BgB,CA0ChB;AACA;AAEA;AACA;AACA;AACA;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,mDAHd,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAGW,CAAD,IAAOD,YAAY,CAACC,CAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,yDAHd,CAIE;AAJF;AAKE,IAAA,QAAQ,EAAGA,CAAD,IAAOD,YAAY,CAACC,CAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eAqBE;AAAQ,IAAA,OAAO,EAAE,MAAMG,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF,CAPF,CADF;AAiCD,CAlFD;;AAoFA,eAAeb,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nconst End = () => {\r\n  //사용자 이름관리 스테이트 정의 및 초기값 세팅\r\n  const [username, setUserName] = useState(\"\");\r\n  const [useremail, setUserEmail] = useState(\"\");\r\n\r\n  //form data\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const { name, email } = user;\r\n\r\n  //유저정보 데이터 바인딩 처리함수       //이거 넣으니까 데이터입력해주세요 false alert안 뜬다!\r\n  const onUserChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // const onClickFunction = (e) => {\r\n  //   window.confirm(\r\n  //     `응모자 성함과 이메일 정보를 확인해주세요 ${username}, ${useremail}` //왜 둘중 하나만 뜨냐\r\n  //   );\r\n  //   setUserName(\"\");\r\n  //   setUserEmail(\"\");\r\n  // };\r\n\r\n  //데이터 백엔드 저장처리함수\r\n  const onEntryDataSave = () => {\r\n    // 유효성검사 만약 form이 비어있으면\r\n    if (user.name == \"\") {\r\n      alert(\"이름을 입력해주세요.\");\r\n      return false;\r\n    }\r\n\r\n    if (user.email == \"\") {\r\n      alert(\"이메일을 입력해주세요.\");\r\n      return false;\r\n    }\r\n\r\n    axios;\r\n  };\r\n\r\n  //Ingame에서 받아온 totalScore\r\n  // const totalScore {\r\n\r\n  //   return <div>\r\n  //     <h1>나의 총 Score: {props.totalScore}</h1>;\r\n  //     </div>\r\n  // }\r\n  return (\r\n    <div>\r\n      <div>\r\n        {/* 점수표시 OR .... */}\r\n        <h2>Score : </h2>\r\n      </div>\r\n\r\n      {/* 응모 폼 */}\r\n      <form>\r\n        <p>Name : </p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"이름을 입력하세요\"\r\n          // value=\"user.name\"\r\n          onChange={(e) => onUserChange(e)}\r\n        />\r\n\r\n        <p>Email : </p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"이메일을 입력하세요\"\r\n          // value=\"user.email\"\r\n          onChange={(e) => onUserChange(e)}\r\n        />\r\n        <br></br>\r\n\r\n        {/* 응모 폼 전송버튼 */}\r\n        <button onClick={() => onEntryDataSave()}>응모</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default End;\r\n"]},"metadata":{},"sourceType":"module"}