{"ast":null,"code":"var _jsxFileName = \"C:\\\\TerryJin\\\\NaverCloud\\\\TerryJin\\\\EventGameApp\\\\src\\\\components\\\\Board.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Counter from \"../Counter\";\n\nconst Ingame = Button => {\n  const [sec, setSec] = useState();\n  useEffect(() => {\n    //컴포넌트가 마운트 되고 setTimeout 함수를 실행\n    setTimeout(() => {\n      // window.confirm(\n      //   `${sec}초 경과, 게임 끝! 참여해주셔서 감사합니다.\\n이벤트 응모페이지로 이동합니다`\n      // )\n      if (window.confirm() == true) {\n        window.location = \"/input\";\n      } else {\n        return false;\n      }\n\n      ;\n      console.log(`${sec}초 경과, 게임 끝!`);\n      window.location = \"/input\"; //여기에 놓을거면 window.confirm 아니어도 alert를 했어도 됐음\n      //confirm을 놓은 이유는 true false를 하려고 놓은건데..\n    }, 5000);\n    return () => {\n      clearTimeout(sec);\n    };\n  }, []); //두번째 인자로 빈 배열 넣어주기\n  // if(setTimeout() == false){\n  //   window.location = \"/input\";\n  //   return false;\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  });\n}; // 버튼을 눌러서 스코어를 증가시키는 함수\n// const Score = ({ number, onIncrease }) => {\n//   return (\n//     <div>\n//       <h2>Score : {number}</h2>\n//       <div>\n//         <button onClick={onIncrease}>score</button>\n//         <button onClick={onIncrease}>score</button>\n//       </div>\n//     </div>\n//   );\n// };\n//Counter.js는 잘 작동되는데\n//그게 Border.js에서 돌아가고 setTimeout도\n//return됐으면 좋겠다\n\n\nconst Score = Counter => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  });\n}; //Score : {number} 를 totalScore로 End에 쏴줘야하는데....\n//지금여기까지 화면 떠지는거만 git에 보내고싶은데\n\n\nexport default Ingame;","map":{"version":3,"sources":["C:/TerryJin/NaverCloud/TerryJin/EventGameApp/src/components/Board.js"],"names":["React","useState","useEffect","Counter","Ingame","Button","sec","setSec","setTimeout","window","confirm","location","console","log","clearTimeout","Score"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,MAAM,GAAIC,MAAD,IAAY;AACzB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,EAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,UAAU,CAAC,MAAM;AAEf;AACA;AACA;AAGA,UAAGC,MAAM,CAACC,OAAP,MAAoB,IAAvB,EAA4B;AAC1BD,QAAAA,MAAM,CAACE,QAAP,GAAkB,QAAlB;AAED,OAHD,MAGO;AACL,eAAO,KAAP;AACD;;AAAA;AAGDC,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEP,GAAI,aAAnB;AACAG,MAAAA,MAAM,CAACE,QAAP,GAAkB,QAAlB,CAhBe,CAgBa;AACA;AAC7B,KAlBS,EAkBP,IAlBO,CAAV;AAsBA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACR,GAAD,CAAZ;AACD,KAFD;AAGD,GA3BQ,EA2BN,EA3BM,CAAT,CAHyB,CA8BjB;AAEN;AACA;AACA;AACA;;AACF,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CArCD,C,CAuCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMS,KAAK,GAAIZ,OAAD,IAAa;AACzB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD,C,CAGA;AACA;;;AAEA,eAAeC,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Counter from \"../Counter\";\r\n\r\nconst Ingame = (Button) => {\r\n  const [sec, setSec] = useState();\r\n\r\n  useEffect(() => {\r\n    //컴포넌트가 마운트 되고 setTimeout 함수를 실행\r\n    setTimeout(() => {\r\n      \r\n      // window.confirm(\r\n      //   `${sec}초 경과, 게임 끝! 참여해주셔서 감사합니다.\\n이벤트 응모페이지로 이동합니다`\r\n      // )\r\n\r\n\r\n      if(window.confirm() == true){\r\n        window.location = \"/input\";\r\n        \r\n      } else {\r\n        return false;\r\n      };\r\n\r\n      \r\n      console.log(`${sec}초 경과, 게임 끝!`);\r\n      window.location = \"/input\"; //여기에 놓을거면 window.confirm 아니어도 alert를 했어도 됐음\r\n                                  //confirm을 놓은 이유는 true false를 하려고 놓은건데..\r\n    }, 5000)\r\n    \r\n\r\n\r\n    return () => {\r\n      clearTimeout(sec);\r\n    };\r\n  }, []); //두번째 인자로 빈 배열 넣어주기\r\n\r\n    // if(setTimeout() == false){\r\n    //   window.location = \"/input\";\r\n    //   return false;\r\n    // }\r\n  return <div></div>;\r\n};\r\n\r\n// 버튼을 눌러서 스코어를 증가시키는 함수\r\n// const Score = ({ number, onIncrease }) => {\r\n//   return (\r\n//     <div>\r\n//       <h2>Score : {number}</h2>\r\n\r\n//       <div>\r\n//         <button onClick={onIncrease}>score</button>\r\n//         <button onClick={onIncrease}>score</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//Counter.js는 잘 작동되는데\r\n//그게 Border.js에서 돌아가고 setTimeout도\r\n//return됐으면 좋겠다\r\n\r\nconst Score = (Counter) => {\r\n  return <div></div>;\r\n};\r\n//Score : {number} 를 totalScore로 End에 쏴줘야하는데....\r\n//지금여기까지 화면 떠지는거만 git에 보내고싶은데\r\n\r\nexport default Ingame;\r\n"]},"metadata":{},"sourceType":"module"}